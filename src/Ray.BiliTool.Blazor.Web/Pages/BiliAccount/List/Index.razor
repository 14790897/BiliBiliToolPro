@namespace Ray.BiliTool.Blazor.Web.Pages.BiliAccount.List
@page "/BiliAccount/List"
@attribute [Authorize(policy: AuthorizationHelper.RequireManagerPolicy)]

@using AntDesign.TableModels
@using Microsoft.Extensions.Configuration

<Table TItem="BiliCookieModel" DataSource="@_data" OnRowClick="OnRowClick">
    <PropertyColumn Title="Key" Property="c => c.ConfigKey"><a>@context.ConfigKey</a></PropertyColumn>
    <PropertyColumn Title="Cookie" Property="c => c.ConfigValue" Width="300px" Ellipsis="true" ></PropertyColumn>

    <PropertyColumn Title="开启" Property="c=>c.Enable">
        <Switch @bind-Value="@context.Enable" OnChange="() => OnEnableAsync(context)"></Switch>
    </PropertyColumn>

    <PropertyColumn Title="创建时间" Property="c => c.CreateTime"></PropertyColumn>
    <PropertyColumn Title="编辑时间" Property="c => c.UpdateTime"></PropertyColumn>

    <ActionColumn Title="操作">
        <Space Size=@("middle")>
            <SpaceItem>
                <Popconfirm Title="确定删除？"
                            OnConfirm="()=> OnDeleteClickAsync(context)"
                            OkText="Yes"
                            CancelText="No">
                    <a>Delete</a>
                </Popconfirm>
            </SpaceItem>
        </Space>
    </ActionColumn>
</Table>

@code {
    [Inject]
    protected IDbConfigService DbConfigService { get; set; }
    [Inject]
    protected ModalService ModalService { get; set; }
    [Inject]
    protected IConfiguration Config { get; set; }


    private List<BiliCookieModel> _data;

    protected override async Task OnInitializedAsync()
    {
        await GetTableListAsync();
        await base.OnInitializedAsync();
    }

    private async Task GetTableListAsync()
    {
        var list = await DbConfigService.GetConfigsByDbAsync(x => x.ConfigKey.StartsWith("BiliBiliCookies"));
        _data = list.Select(x => new BiliCookieModel(x)).ToList();
    }


    private void OnRowClick(RowData<BiliCookieModel> row)
    {
        Console.WriteLine($"row {row.Data.Id} was clicked.");
    }

    private async Task OnDeleteClickAsync(BiliCookieModel ck)
    {
        await DbConfigService.DeleteConfigsAsync(x => x.Id == ck.Id);
        await ModalService.SuccessAsync(new ConfirmOptions()
            {
                Title = "删除成功",
                Content = $"Key：{ck.ConfigKey}"
            });
        await GetTableListAsync();
    }

    private async Task OnEnableAsync(BiliCookieModel ck)
    {
        await DbConfigService.AddOrUpdateConfigsAsync(ck);

        await ModalService.SuccessAsync(new ConfirmOptions()
            {
                Title = ck.Enable ? "已开启" : "已关闭",
                Content = $"Key：{ck.ConfigKey}"
            });
    }
}
